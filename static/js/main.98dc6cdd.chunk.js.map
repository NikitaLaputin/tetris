{"version":3,"sources":["components/buttons/button.module.css","components/field/field.module.css","components/game/game.module.css","components/info/info.module.css","components/display/display.module.css","utils/consts.js","utils/index.js","redux/selectors/index.js","components/helpers/draw-text.js","hooks/use-canvas.js","components/helpers/draw-block.js","components/helpers/draw-tetrimino.js","components/field/index.js","components/helpers/draw-field.js","components/helpers/draw-high-score.js","components/helpers/draw-game-over.js","components/next-block/index.js","hooks/use-interval.js","redux/ducks/field.js","redux/ducks/game-state.js","components/info/index.js","components/display/index.js","hooks/use-key-press.js","components/buttons/option-button.js","components/buttons/start.js","components/buttons/pause.js","redux/ducks/active-block.js","components/buttons/main-button.js","components/buttons/left.js","components/buttons/right.js","components/buttons/rotate.js","components/buttons/down.js","components/buttons/drop.js","components/buttons/index.js","components/game/index.js","hooks/use-tab-change.js","App.js","serviceWorker.js","redux/reduser/index.js","redux/ducks/next-block.js","redux/ducks/high-score.js","redux/middlewares/game-state-checker.js","redux/middlewares/block-locker.js","redux/store/index.js","redux/middlewares/pause-toggle.js","redux/middlewares/move-down.js","redux/middlewares/collision-check.js","redux/middlewares/destroy-row.js","localstorage/index.js","index.js"],"names":["module","exports","SHAPES","I","J","L","O","S","T","Z","colors","INVISIBLE_ROWS","SHAPE_POSITION","DEFAULT_SHAPE","shape","position","PIXEL_RATIO","window","devicePixelRatio","BLOCK_SIDE","getLeftPoint","matrix","Math","min","map","row","arr","findIndex","val","length","getRightPoint","max","reduce","acc","i","getBottomPoint","canMoveDown","field","block","x","y","cell","between","value","start","finish","mergeMatrix","target","ri","ci","collide","getFiledHeight","filter","calcNewScore","score","level","lines","randomizeShapes","sort","round","random","getNewTetrimino","randomArray","letter","locked","calcLevel","ceil","calcSpeed","pow","Timeout","keys","keyData","set","key","wait","clear","setTimeout","Date","getTime","paused","clearTimeout","pause","resume","Interval","keysTimeouts","ms","setInterval","clearInterval","getShapeColor","darkenColor","color","percent","split","floor","join","lightenColor","getGhostBlock","isMobileDevice","orientation","navigator","userAgent","indexOf","timeFromMs","slice","clearArea","ctx","area","forEach","rowI","cellI","clearRect","blockSelector","state","activeBlock","fieldSelector","levelSelector","gameState","scoreSelector","highScoreSelector","highScore","linesSelector","gameStateSelector","speedSelector","speed","drawText","size","text","textAlign","lineWidth","font","strikeStyle","strokeText","fillStyle","fillText","useCoolCanvas","draw","clearFunction","style","width","height","canvasWidth","useMemo","canvasHeigth","ref","useRef","current","getContext","useEffect","drawBlock","ghost","beginPath","strokeStyle","rect","stroke","closePath","lingrad","createLinearGradient","colorGradStart","colorGradEnd","addColorStop","fillRect","drawTetrimino","startingRow","offset","col","memo","useSelector","ghostBlock","ghostBlockSelector","status","canvasStyle","borderRadius","fieldPosition","blockPosition","ghostBlockPosition","fieldCanvas","useCanvas","useCallback","drawField","blockCanvas","zIndex","ghostBlockCanvas","textCanvas","center","res","concat","drawHighScore","drawGameOver","includes","background","className","styles","nextBlock","nextBlockSelector","startPosition","canvas","side","now","MERGE","defaultState","mergeField","payload","type","START","DEFEAT","PAUSE","RESUME","RESET","lastAction","togglePause","reset","Info","useState","time","setTime","callback","remaining","setRemaining","startTime","setStartTime","setPaused","savedCallback","interval","useInterval","canvasStyles","info","Display","mouseUp","mouseDown","isKeyClicked","targetKey","toLowerCase","isButtonClicked","targetButton","e","contains","useKey","timeout","continious","frequency","delay","pressed","setPressed","onDown","preventDefault","onUp","addEventListener","removeEventListener","OptionButton","btnRef","StartButton","dispatch","useDispatch","useKeyPress","PauseButton","ROTATE","MOVE_RIGHT","MOVE_LEFT","MOVE_DOWN","SET_NEW_TETRIMINO","LOCK","UNLOCK","DROP","MOVE_LOCK","MOVE_UNLOCK","moveRight","moveLeft","moveDown","rotate","unlock","drop","movementLock","movementUnlock","MainButton","tabIndex","LeftButton","RightButton","RotateButton","DownButton","DropButton","Buttons","gridArea","Game","document","useTabChange","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","combineReducers","action","movementLocked","newLevel","newSpeed","a","b","alwaysDispatch","actions","middlewares","store","next","getState","speedBefore","speedAfter","getBlock","getField","canMoveLeft","canMoveRight","tetrimino","rotated","_","index","flipMatrix","reverse","maxDelta","deg","PI","delta","cos","dx","abs","rotateTetrimino","isMovingDown","dispatchMerge","heightBefore","Array","fill","heightAfter","rows","destroyFullRows","destroyRow","setNewTetrimino","setNewHighScore","serializedHighScore","JSON","stringify","localStorage","setItem","saveHighScore","getItem","parse","err","loadHighScore","enhancer","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","createStore","reducer","ReactDOM","render","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.98dc6cdd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons-container\":\"button_buttons-container__1955V\",\"button-container\":\"button_button-container__39fQB\",\"tetris-button\":\"button_tetris-button__eItG2\",\"tetris-option-button\":\"button_tetris-option-button__3Kl3U\",\"tetris-button__active\":\"button_tetris-button__active__26vlf\",\"tetris-option-button__active\":\"button_tetris-option-button__active__1vvTZ\",\"tetris-button__dark\":\"button_tetris-button__dark__2RK1f\",\"tetris-button__dark__active\":\"button_tetris-button__dark__active__1fMOD\",\"tetris-option-button__dark\":\"button_tetris-option-button__dark__1HGSl\",\"tetris-option-button__dark__active\":\"button_tetris-option-button__dark__active__W25rR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas-container\":\"field_canvas-container__1U1ww\",\"canvas-container__dark\":\"field_canvas-container__dark__2GoQP\",\"canvas-container__light\":\"field_canvas-container__light__25KvA\",\"text\":\"field_text__504n6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tetris-container\":\"game_tetris-container__2gHB5\",\"tetris-container__light\":\"game_tetris-container__light__11ybi\",\"tetris-container__dark\":\"game_tetris-container__dark__3bHhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info-column\":\"info_info-column__2XUG0\",\"info\":\"info_info__3GloF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display-container\":\"display_display-container__NotnD\"};","export const SHAPES = {\n  I: [\n    [0, 0, 1, 0, 0],\n    [0, 0, 1, 0, 0],\n    [0, 0, 1, 0, 0],\n    [0, 0, 1, 0, 0]\n  ],\n  J: [\n    [0, 2, 0],\n    [0, 2, 0],\n    [2, 2, 0]\n  ],\n  L: [\n    [0, 3, 0],\n    [0, 3, 0],\n    [0, 3, 3]\n  ],\n  O: [\n    [4, 4],\n    [4, 4]\n  ],\n  S: [\n    [0, 5, 5],\n    [5, 5, 0],\n    [0, 0, 0]\n  ],\n  T: [\n    [0, 0, 0],\n    [6, 6, 6],\n    [0, 6, 0]\n  ],\n  Z: [\n    [7, 7, 0],\n    [0, 7, 7],\n    [0, 0, 0]\n  ]\n};\nexport const SHAPES_LIST = \"IJLOSTZ\";\nexport const RIGHT = \"RIGHT\";\nexport const LEFT = \"LEFT\";\nexport const DOWN = \"DOWN\";\nexport const DEFAULT_POSITION = [3, 0];\nexport const colors = [\n  \"rgba(255, 255, 255, 1)\",\n  \"rgba(0, 243, 255, 1)\",\n  \"rgba(0, 90, 255, 1)\",\n  \"rgba(255, 118, 0, 1)\",\n  \"rgba(255, 247, 0, 1)\",\n  \"rgba(0, 255, 102, 1)\",\n  \"rgba(133, 0, 255, 1)\",\n  \"rgba(255, 0, 0, 1)\"\n];\nexport const IN_PROGRESS = \"Running\";\nexport const GAME_OVER = \"GAME OVER\";\nexport const INVISIBLE_ROWS = 4;\nexport const SHAPE_POSITION = {\n  I: [3, INVISIBLE_ROWS - 4],\n  J: [3, INVISIBLE_ROWS - 3],\n  L: [3, INVISIBLE_ROWS - 3],\n  O: [4, INVISIBLE_ROWS - 2],\n  S: [3, INVISIBLE_ROWS - 3],\n  T: [3, INVISIBLE_ROWS - 3],\n  Z: [3, INVISIBLE_ROWS - 3]\n};\nexport const MAX_LEVELS = 15;\nexport const GAME_PAUSED = \"GAME_PAUSED\";\nexport const NOT_STARTED = \"NOT_STARTED\";\nexport const LOCK_DELAY = 500;\nexport const DEFAULT_SHAPE = {\n  shape: SHAPES.I,\n  position: SHAPE_POSITION.I\n};\n\nexport const PIXEL_RATIO = (() => window.devicePixelRatio)();\nexport const BLOCK_SIDE = 20 * PIXEL_RATIO;\n","import {\n  INVISIBLE_ROWS,\n  SHAPES_LIST,\n  SHAPES,\n  SHAPE_POSITION,\n  MAX_LEVELS,\n  colors,\n  BLOCK_SIDE\n} from \"./consts\";\n\nconst flipMatrix = matrix =>\n  matrix[0].map((_, index) => matrix.map(row => row[index]));\n\nconst firstNonzero = arr =>\n  !~arr.findIndex(val => val) ? arr.length - 1 : arr.findIndex(val => val);\n\nconst lastNonzero = arr => arr.reduce((acc, val, i) => (val ? i : acc), 0);\n\nconst getLeftPoint = matrix =>\n  Math.min(...matrix.map(row => firstNonzero(row)));\n\nconst getRightPoint = matrix =>\n  Math.max(...matrix.map(row => lastNonzero(row)));\n\nconst getBottomPoint = matrix =>\n  Math.max(\n    ...matrix.map((row, i) => row.reduce((acc, val) => (val ? i : acc), 0))\n  );\n\nexport const rotate = matrix => {\n  return flipMatrix(matrix.slice().reverse());\n};\n\nexport const canMoveLeft = (field, block) => {\n  const { shape, position } = block;\n  const [x, y] = position;\n  for (let row = 0; row < shape.length; row++)\n    for (let cell = 0; cell < shape[row].length; cell++)\n      if (\n        shape[row][cell] &&\n        (x + getLeftPoint(shape) <= 0 ||\n          (field[row + y] && field[row + y][cell + x - 1]))\n      )\n        return false;\n  return true;\n};\n\nexport const canMoveRight = (field, block) => {\n  const { shape, position } = block;\n  const [x, y] = position;\n  for (let row = 0; row < shape.length; row++)\n    for (let cell = 0; cell < shape[row].length; cell++)\n      if (\n        shape[row][cell] &&\n        (x + getRightPoint(shape) >= 9 ||\n          (field[row + y] && field[row + y][cell + x + 1]))\n      )\n        return false;\n  return true;\n};\n\nexport const canMoveDown = (field, block) => {\n  const { shape, position } = block;\n  const [x, y] = position;\n  for (let row = 0; row < shape.length; row++)\n    for (let cell = 0; cell < shape[row].length; cell++)\n      if (\n        shape[row][cell] &&\n        (y + getBottomPoint(shape) >= 19 + INVISIBLE_ROWS ||\n          (field[row + y + 1] && field[row + y + 1][cell + x]))\n      )\n        return false;\n  return true;\n};\n\nconst between = (value, start, finish) => value > start && value < finish;\n\nexport const mergeMatrix = (target, matrix, position) =>\n  target.map((row, ri) =>\n    row.map((cell, ci) =>\n      between(ri, position[1] - 1, position[1] + matrix.length) &&\n      between(\n        ci,\n        position[0] - 1,\n        position[0] + matrix[ri - position[1]].length\n      ) &&\n      matrix[ri - position[1]][ci - position[0]]\n        ? matrix[ri - position[1]][ci - position[0]]\n        : cell\n    )\n  );\n\nexport const collide = (field, block) => {\n  const { shape, position } = block;\n  const [x, y] = position;\n  for (let row = 0; row < shape.length; row++)\n    for (let cell = 0; cell < shape[row].length; cell++)\n      if (\n        shape[row][cell] &&\n        (x + getLeftPoint(shape) < 0 ||\n          x + getRightPoint(shape) > 9 ||\n          y + getBottomPoint(shape) >= 20 + INVISIBLE_ROWS ||\n          (field[row + y] && field[row + y][cell + x]))\n      )\n        return true;\n  return false;\n};\n\nexport const rotateTetrimino = (field, tetrimino) => {\n  const { shape, position, locked } = tetrimino;\n  let rotated = { shape: rotate(shape), position, locked };\n  const maxDelta = Math.floor(shape.length / 2);\n  if (!collide(field, rotated)) {\n    return rotated;\n  }\n  for (let deg = Math.PI / 2; deg <= Math.PI * 2; deg *= 2) {\n    const delta = Math.floor(Math.cos(deg));\n    for (let dx = delta; dx !== 0 && Math.abs(dx) <= maxDelta; dx += delta) {\n      rotated = {\n        ...rotated,\n        position: [position[0] + dx, position[1]]\n      };\n      if (!collide(field, rotated)) {\n        return rotated;\n      }\n    }\n  }\n  return tetrimino;\n};\n\nconst isFullRow = arr => arr && arr.length === arr.filter(val => val).length;\n\nconst isNullRow = arr => !arr.filter(val => val).length;\n\nexport const destroyFullRows = matrix => {\n  const heightBefore = getFiledHeight(matrix);\n  matrix = matrix\n    .map((row, i) =>\n      isFullRow(row) ? new Array(matrix[i].length).fill(0) : row\n    )\n    .sort(row => (isNullRow(row) ? -1 : 0));\n  const heightAfter = getFiledHeight(matrix);\n  const rows = heightBefore - heightAfter;\n  return {\n    matrix,\n    rows\n  };\n};\n\nexport const getFiledHeight = field =>\n  field.reduce((acc, row) => (row.filter(val => val).length ? ++acc : acc), 0);\n\nexport const calcNewScore = ({ score, level, lines }) => {\n  switch (lines) {\n    case 1:\n      return score + 40 * (level + 1);\n    case 2:\n      return score + 100 * (level + 1);\n    case 3:\n      return score + 300 * (level + 1);\n    case 4:\n      return score + 1200 * (level + 1);\n    default:\n      return score;\n  }\n};\n\nconst randomizeShapes = () =>\n  [...SHAPES_LIST].sort(() => Math.round(Math.random() * 2 - 1));\n\nexport const getNewTetrimino = (() => {\n  let i = 0;\n  let randomArray = randomizeShapes();\n  const getNextShape = () => {\n    const letter = randomArray[i];\n    i++;\n    if (i > 6) {\n      i = 0;\n      randomArray = randomizeShapes();\n    }\n    const shape = SHAPES[letter];\n    const position = SHAPE_POSITION[letter];\n    return { shape, position, locked: false };\n  };\n  return getNextShape;\n})();\n\nexport const calcLevel = lines => Math.min(Math.ceil(lines / 10), MAX_LEVELS);\n\nexport const calcSpeed = level =>\n  Math.round(Math.pow(0.8 - (level - 1) * 0.007, level - 1) * 1000 * 100000) /\n  100000;\n\nexport const Timeout = (() => {\n  const keys = {};\n  const keyData = {};\n  const set = (key, wait) => {\n    clear(key);\n    keys[key] = setTimeout(key, wait);\n    keyData[key] = { start: new Date().getTime(), paused: false, wait };\n  };\n\n  const clear = key => {\n    if (keys[key]) {\n      clearTimeout(keys[key]);\n      delete keys[key];\n      delete keyData[key];\n    }\n  };\n\n  const paused = key => keys[key] && keyData[key] && keyData[key].paused;\n\n  const pause = key => {\n    if (!keys[key]) return;\n    if (paused(key)) return;\n    clearTimeout(keys[key]);\n    const start = new Date().getTime();\n    const wait = keyData[key].wait - (start - keyData[key].start);\n\n    keyData[key] = { start, wait, paused: true };\n  };\n\n  const resume = key => {\n    if (!keys[key]) return;\n    if (!paused(key)) return;\n\n    set(key, keyData[key].wait);\n  };\n\n  return {\n    set,\n    clear,\n    pause,\n    resume\n  };\n})();\n\nexport const Interval = (() => {\n  const keys = {};\n  const keyData = {};\n  const keysTimeouts = {};\n  const set = (key, ms) => {\n    clear(key);\n    keys[key] = setInterval(() => {\n      key();\n      keyData[key] = {\n        start: new Date().getTime(),\n        paused: false,\n        ms,\n        wait: 0\n      };\n    }, ms);\n    keyData[key] = { start: new Date().getTime(), paused: false, ms, wait: 0 };\n  };\n\n  const clear = key => {\n    if (keys[key]) {\n      clearInterval(keys[key]);\n      clearTimeout(keysTimeouts[key]);\n      delete keys[key];\n      delete keyData[key];\n    }\n  };\n\n  const paused = key => keys[key] && keyData[key] && keyData[key].paused;\n\n  const pause = key => {\n    if (!keys[key]) return;\n    if (paused(key)) return;\n    clearInterval(keys[key]);\n    clearTimeout(keysTimeouts[key]);\n    const start = new Date().getTime();\n    const wait = keyData[key].ms - (start - keyData[key].start);\n\n    keyData[key] = { ...keyData[key], start, wait, paused: true };\n  };\n\n  const resume = key => {\n    if (!keys[key]) return;\n    if (!paused(key)) return;\n    keysTimeouts[key] = setTimeout(() => {\n      key();\n      set(key, keyData[key].ms);\n    }, keyData[key].wait);\n  };\n\n  return {\n    set,\n    clear,\n    pause,\n    resume\n  };\n})();\n\nexport const getShapeColor = shape =>\n  colors[\n    shape.reduce(\n      (acc, row) =>\n        acc ? acc : row.reduce((acc, cell) => (cell ? cell : acc), 0),\n      0\n    )\n  ];\n\nexport const darkenColor = (color, percent) =>\n  color\n    .split(\"(\")\n    .map((val, i) =>\n      i\n        ? val\n            .split(\", \")\n            .map((val, i, arr) =>\n              i < arr.length - 1\n                ? Math.max(\n                    Math.min(255, Math.floor((val * (100 - percent)) / 100)),\n                    0\n                  )\n                : val\n            )\n            .join(\", \")\n        : val\n    )\n    .join(\"(\");\n\nexport const lightenColor = (color, percent) =>\n  color\n    .split(\"(\")\n    .map((val, i) =>\n      i\n        ? val\n            .split(\", \")\n            .map((val, i, arr) =>\n              i < arr.length - 1\n                ? Math.max(\n                    Math.min(\n                      255,\n                      Math.floor(((255 - val) * percent) / 100 + +val)\n                    ),\n                    0\n                  )\n                : val\n            )\n            .join(\", \")\n        : val\n    )\n    .join(\"(\");\n\nexport const getGhostBlock = (field, block) => {\n  while (canMoveDown(field, block)) {\n    const { position } = block;\n    block = {\n      ...block,\n      position: [position[0], position[1] + 1]\n    };\n  }\n  return block;\n};\n\nexport const isMobileDevice = (() =>\n  typeof window.orientation !== \"undefined\" ||\n  navigator.userAgent.indexOf(\"IEMobile\") !== -1)();\n\nexport const timeFromMs = ms =>\n  `${Math.floor(ms / 60)}:${(\"0\" + Math.floor(ms % 60)).slice(-2)}`;\n\nexport const clearArea = (ctx, area, position) => {\n  area.forEach((row, rowI) =>\n    row.forEach((cell, cellI) => {\n      if (cell) {\n        ctx.clearRect(\n          (cellI + position[0]) * BLOCK_SIDE,\n          (rowI + position[1]) * BLOCK_SIDE,\n          BLOCK_SIDE,\n          BLOCK_SIDE\n        );\n      }\n    })\n  );\n};\n","import { getGhostBlock } from \"../../utils\";\n\nexport const blockSelector = state => state.activeBlock;\nexport const fieldSelector = state => state.field;\nexport const levelSelector = state => state.gameState.level;\nexport const scoreSelector = state => state.gameState.score;\nexport const highScoreSelector = state => state.highScore;\nexport const linesSelector = state => state.gameState.lines;\nexport const gameStateSelector = state => state.gameState;\nexport const gameStatusSelector = state => gameStateSelector(state).status;\nexport const gameLastActionSelector = state =>\n  gameStateSelector(state).lastAction;\nexport const speedSelector = state => gameStateSelector(state).speed;\nexport const nextBlockSelector = state => state.nextBlock;\nexport const ghostBlockSelector = state =>\n  getGhostBlock(fieldSelector(state), blockSelector(state));\n","import { PIXEL_RATIO } from \"../../utils/consts\";\n\nexport default function drawText({ ctx, size, position, color, text }) {\n  // ctx.fillStyle = \"#0b0d10\";\n  // ctx.fillRect(0, 0, 200 * PIXEL_RATIO, 400 * PIXEL_RATIO);\n  const [x, y] = position;\n  ctx.textAlign = \"center\";\n  ctx.lineWidth = 3 * PIXEL_RATIO;\n  ctx.font = `${size * PIXEL_RATIO}px monospace`;\n  ctx.strikeStyle = \"black\";\n  ctx.strokeText(text, x, y, 190 * PIXEL_RATIO);\n  ctx.fillStyle = color;\n  ctx.fillText(text, x, y, 190 * PIXEL_RATIO);\n}\n","import React, { useRef, useEffect, useMemo } from \"react\";\nimport { PIXEL_RATIO } from \"../utils/consts\";\n\nconst useCoolCanvas = (draw, clearFunction, style) => {\n  const { width, height } = style;\n  const canvasWidth = useMemo(() => width * PIXEL_RATIO, [width]);\n  const canvasHeigth = useMemo(() => height * PIXEL_RATIO, [height]);\n  const ref = useRef(null);\n  const ctx = ref.current && ref.current.getContext(\"2d\");\n\n  useEffect(() => {\n    if (!ctx) return;\n\n    draw(ctx);\n\n    return () => {\n      clearFunction(ctx);\n    };\n  }, [draw, clearFunction, ctx]);\n\n  const canvas = (\n    <canvas ref={ref} width={canvasWidth} height={canvasHeigth} style={style} />\n  );\n\n  return canvas;\n};\n\nexport default useCoolCanvas;\n","import { darkenColor, lightenColor } from \"../../utils\";\nimport { PIXEL_RATIO, BLOCK_SIDE } from \"../../utils/consts\";\n\nexport default function drawBlock({\n  ctx,\n  position,\n  color,\n  locked = false,\n  ghost = false\n}) {\n  const [x, y] = position;\n  if (ghost) {\n    ctx.beginPath();\n    ctx.strokeStyle = \"#858fa5\";\n    ctx.lineWidth = 2 * PIXEL_RATIO;\n    ctx.rect(\n      x + 2 * PIXEL_RATIO,\n      y + 2 * PIXEL_RATIO,\n      BLOCK_SIDE - 4 * PIXEL_RATIO,\n      BLOCK_SIDE - 4 * PIXEL_RATIO\n    );\n    ctx.stroke();\n    ctx.closePath();\n  } else {\n    const lingrad = ctx.createLinearGradient(\n      x,\n      y,\n      x + BLOCK_SIDE,\n      y + BLOCK_SIDE\n    );\n    const colorGradStart = locked ? lightenColor(color, 75) : color;\n    const colorGradEnd = locked\n      ? lightenColor(color, 25)\n      : darkenColor(color, 35);\n    lingrad.addColorStop(0, colorGradStart);\n    lingrad.addColorStop(0.5, colorGradStart);\n    lingrad.addColorStop(0.5, colorGradEnd);\n    lingrad.addColorStop(1, colorGradEnd);\n    ctx.fillStyle = lingrad;\n    ctx.fillRect(\n      x + 1 * PIXEL_RATIO,\n      y + 1 * PIXEL_RATIO,\n      BLOCK_SIDE - 2 * PIXEL_RATIO,\n      BLOCK_SIDE - 2 * PIXEL_RATIO\n    );\n  }\n}\n","import { INVISIBLE_ROWS, BLOCK_SIDE } from \"../../utils/consts\";\nimport { getShapeColor } from \"../../utils\";\nimport drawBlock from \"./draw-block\";\n\nexport default function drawTetrimino({\n  block,\n  ctx,\n  startingRow = INVISIBLE_ROWS,\n  offset = [0, 0],\n  ghost = false\n}) {\n  if (!block) return;\n  const { shape, position, locked } = block;\n  const [x, y] = position;\n  let color = getShapeColor(shape);\n\n  shape.forEach((row, ri) =>\n    row.forEach((col, ci) => {\n      if (!col) return;\n      const position = [\n        x * BLOCK_SIDE + ci * BLOCK_SIDE + offset[0],\n        y * BLOCK_SIDE + (ri - startingRow) * BLOCK_SIDE + offset[1]\n      ];\n      drawBlock({ ctx, position, color, locked, ghost });\n    })\n  );\n}\n","import React, { memo, useRef, useMemo, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  blockSelector,\n  fieldSelector,\n  gameStateSelector,\n  ghostBlockSelector,\n  highScoreSelector,\n  scoreSelector\n} from \"../../redux/selectors\";\nimport {\n  NOT_STARTED,\n  INVISIBLE_ROWS,\n  GAME_PAUSED,\n  GAME_OVER,\n  BLOCK_SIDE,\n  PIXEL_RATIO\n} from \"../../utils/consts\";\nimport drawText from \"../helpers/draw-text\";\nimport useCanvas from \"../../hooks/use-canvas\";\nimport drawHighScore from \"../helpers/draw-high-score\";\nimport drawGameOver from \"../helpers/draw-game-over\";\nimport drawField from \"../helpers/draw-field\";\nimport drawTetrimino from \"../helpers/draw-tetrimino\";\nimport styles from \"./field.module.css\";\nimport { clearArea } from \"../../utils\";\n\nconst Field = () => {\n  const block = useSelector(state => blockSelector(state));\n  const field = useSelector(state => fieldSelector(state));\n  const ghostBlock = useSelector(state => ghostBlockSelector(state));\n  const gameState = useSelector(state => gameStateSelector(state));\n  const highScore = useSelector(state => highScoreSelector(state));\n  const score = useSelector(state => scoreSelector(state));\n\n  const emptyArr = useRef(null);\n  emptyArr.current = [[]];\n\n  const { status } = gameState;\n\n  const canvasStyle = useMemo(\n    () => ({\n      width: 200,\n      height: 400,\n      position: \"absolute\",\n      borderRadius: 10\n    }),\n    []\n  );\n\n  const fieldPosition = useMemo(() => [0, 0 - INVISIBLE_ROWS], []);\n\n  const blockPosition = useMemo(\n    () => [block.position[0], block.position[1] - INVISIBLE_ROWS],\n    [block]\n  );\n\n  const ghostBlockPosition = useMemo(\n    () => [ghostBlock.position[0], ghostBlock.position[1] - INVISIBLE_ROWS],\n    [ghostBlock]\n  );\n\n  const fieldCanvas = useCanvas(\n    useCallback(\n      ctx => {\n        drawField({\n          field,\n          ctx\n        });\n      },\n      [field]\n    ),\n    useCallback(\n      ctx => {\n        clearArea(ctx, field, fieldPosition);\n      },\n      [field, fieldPosition]\n    ),\n    canvasStyle\n  );\n\n  const blockCanvas = useCanvas(\n    useCallback(\n      ctx => {\n        drawTetrimino({\n          block,\n          ctx\n        });\n      },\n      [block]\n    ),\n    useCallback(\n      ctx => {\n        clearArea(ctx, block.shape, blockPosition);\n      },\n      [block, blockPosition]\n    ),\n    { ...canvasStyle, zIndex: 2 }\n  );\n\n  const ghostBlockCanvas = useCanvas(\n    useCallback(\n      ctx => {\n        drawTetrimino({\n          block: ghostBlock,\n          ctx,\n          ghost: true\n        });\n      },\n      [ghostBlock]\n    ),\n    useCallback(\n      ctx => {\n        clearArea(ctx, ghostBlock.shape, ghostBlockPosition);\n      },\n      [ghostBlock, ghostBlockPosition]\n    ),\n    canvasStyle\n  );\n\n  const textCanvas = useCanvas(\n    useCallback(\n      ctx => {\n        const color = \"#eaeaea\";\n        const position = [\n          (field[0].length * BLOCK_SIDE) / 2,\n          ((field.length - INVISIBLE_ROWS - 5) / 2) * BLOCK_SIDE\n        ];\n        const center = [\n          (field[0].length * BLOCK_SIDE) / 2,\n          ((field.length - INVISIBLE_ROWS) / 2) * BLOCK_SIDE\n        ];\n        switch (status) {\n          case NOT_STARTED:\n            drawHighScore({\n              highScore,\n              ctx,\n              size: 20,\n              position,\n              color\n            });\n            break;\n\n          case GAME_PAUSED:\n            drawText({\n              ctx,\n              size: 30,\n              position: center,\n              color,\n              text: \"PAUSED\"\n            });\n            break;\n\n          case GAME_OVER:\n            drawGameOver({\n              ctx,\n              highScore: highScore.includes(score),\n              position,\n              color\n            });\n            break;\n\n          default:\n            return;\n        }\n      },\n      [field, highScore, score, status]\n    ),\n    useCallback(\n      ctx => {\n        ctx.clearRect(\n          0,\n          0,\n          canvasStyle.width * PIXEL_RATIO,\n          canvasStyle.height * PIXEL_RATIO\n        );\n      },\n      [canvasStyle.height, canvasStyle.width]\n    ),\n    {\n      ...canvasStyle,\n      background:\n        (status === NOT_STARTED || status === GAME_PAUSED) &&\n        \"var(--bg-color-d)\",\n      zIndex: 3\n    }\n  );\n\n  return (\n    <div\n      className={`${styles[\"canvas-container\"]} ${styles[\"canvas-container__dark\"]}`}\n      style={{ height: 400 }}\n    >\n      {textCanvas}\n      {blockCanvas}\n      {ghostBlockCanvas}\n      {fieldCanvas}\n    </div>\n  );\n};\n\nexport default memo(Field);\n","import { colors, INVISIBLE_ROWS, BLOCK_SIDE } from \"../../utils/consts\";\nimport drawBlock from \"./draw-block\";\n\nexport default function drawField({ field, ctx }) {\n  field.forEach((row, ri) => {\n    if (ri > INVISIBLE_ROWS - 1)\n      row.forEach((col, ci) => {\n        if (!col) return;\n        const position = [ci * BLOCK_SIDE, (ri - INVISIBLE_ROWS) * BLOCK_SIDE];\n        const color = colors[field[ri][ci]];\n        drawBlock({ ctx, BLOCK_SIDE, position, color });\n      });\n  });\n}\n","import drawText from \"./draw-text\";\nimport { PIXEL_RATIO } from \"../../utils/consts\";\n\nexport default function drawHighScore({\n  highScore = [],\n  ctx,\n  color,\n  position,\n  size\n}) {\n  const highScores = highScore.reduce(\n    (res, val, i) =>\n      val\n        ? res.concat(\n            drawText({\n              ctx,\n              size,\n              position: [position[0], position[1] + 30 * PIXEL_RATIO * (i + 2)],\n              color,\n              text: `${i + 1}: ${val}`\n            })\n          )\n        : res,\n    []\n  );\n  if (highScores.length) {\n    drawText({\n      ctx,\n      size: 30,\n      position,\n      color,\n      text: \"PRESS START\"\n    });\n    drawText({\n      ctx,\n      size: 20,\n      position: [position[0], position[1] + 30 * PIXEL_RATIO],\n      color,\n      text: \"HIGH SCORES:\"\n    });\n  } else {\n    drawText({\n      ctx,\n      size: 30,\n      position: [position[0], position[1] + 50 * PIXEL_RATIO],\n      color,\n      text: \"PRESS START\"\n    });\n  }\n}\n","import drawText from \"./draw-text\";\nimport { PIXEL_RATIO } from \"../../utils/consts\";\n\nexport default function drawGameOver({\n  ctx,\n  color,\n  position,\n  highScore = false\n}) {\n  if (highScore) {\n    drawText({\n      ctx,\n      size: 30,\n      position,\n      color,\n      text: \"GAME OVER\"\n    });\n    drawText({\n      ctx,\n      size: 30,\n      position: [position[0], position[1] + 40 * PIXEL_RATIO],\n      color,\n      text: \"NEW\"\n    });\n    drawText({\n      ctx,\n      size: 30,\n      position: [position[0], position[1] + 80 * PIXEL_RATIO],\n      color,\n      text: \"HIGH SCORE!\"\n    });\n  } else {\n    drawText({\n      ctx,\n      size: 30,\n      position: [position[0], position[1] + 60 * PIXEL_RATIO],\n      color,\n      text: \"GAME OVER\"\n    });\n  }\n}\n","import React, { memo, useMemo, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { nextBlockSelector } from \"../../redux/selectors\";\nimport drawTetrimino from \"../helpers/draw-tetrimino\";\nimport styles from \"../field/field.module.css\";\nimport useCanvas from \"../../hooks/use-canvas\";\nimport { PIXEL_RATIO, BLOCK_SIDE } from \"../../utils/consts\";\nimport { clearArea } from \"../../utils\";\n\nconst NextBlock = () => {\n  const nextBlock = useSelector(state => nextBlockSelector(state));\n  const width = 100;\n  const height = 100;\n\n  const { shape } = useMemo(() => nextBlock, [nextBlock]);\n  const x = useMemo(\n    () => Math.floor((width * PIXEL_RATIO - shape[0].length * BLOCK_SIDE) / 2),\n    [shape]\n  );\n  const y = useMemo(\n    () => Math.floor((height * PIXEL_RATIO - shape.length * BLOCK_SIDE) / 2),\n    [shape]\n  );\n  const startPosition = useMemo(() => [x / BLOCK_SIDE, y / BLOCK_SIDE], [x, y]);\n\n  const canvas = useCanvas(\n    useCallback(\n      ctx => {\n        const position = [0, 0];\n        const block = { ...nextBlock, position };\n        const offset = [x, y];\n        drawTetrimino({\n          block,\n          ctx,\n          side: BLOCK_SIDE,\n          offset,\n          startingRow: 0\n        });\n      },\n      [nextBlock, x, y]\n    ),\n    useCallback(\n      ctx => {\n        clearArea(ctx, shape, startPosition);\n      },\n      [shape, startPosition]\n    ),\n    { width, height }\n  );\n\n  return (\n    <div\n      className={`${styles[\"canvas-container\"]} ${styles[\"canvas-container__dark\"]}`}\n    >\n      <div className={styles.text}>Next block</div>\n      {canvas}\n    </div>\n  );\n};\n\nexport default memo(NextBlock);\n","import { useState, useEffect, useRef } from \"react\";\n\nconst now = () => new Date().getTime();\n\nexport default function useInterval(callback, ms) {\n  const [remaining, setRemaining] = useState(0);\n  const [startTime, setStartTime] = useState(now());\n  const [paused, setPaused] = useState(true);\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  const start = () => {\n    setStartTime(now());\n    setPaused(false);\n  };\n  const pause = () => {\n    setPaused(true);\n    setRemaining(ms - (now() - startTime));\n    setStartTime(now());\n  };\n  const resume = () => {\n    if (paused) {\n      setPaused(false);\n      setStartTime(now());\n    }\n  };\n  const reset = () => {\n    setPaused(false);\n    setRemaining(ms);\n    setStartTime(now());\n  };\n\n  useEffect(() => {\n    const interval = setInterval(\n      () => {\n        savedCallback.current();\n        setRemaining(0);\n        setStartTime(now());\n      },\n      remaining ? remaining : ms\n    );\n    if (paused) {\n      clearInterval(interval);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [ms, paused, remaining]);\n\n  return {\n    start,\n    pause,\n    resume,\n    reset\n  };\n}\n","import { mergeMatrix } from \"../../utils\";\nimport { RESET } from \"./game-state\";\n\nexport const MERGE = \"MERGE\";\nexport const DESTROY_ROW = \"DESTROY_ROW\";\nconst defaultState = [\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n];\n\nexport default (state = defaultState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case MERGE:\n      const { shape, position } = payload;\n      return mergeMatrix(state, shape, position);\n    case DESTROY_ROW:\n      return payload;\n    case RESET:\n      return defaultState;\n    default:\n      return state;\n  }\n};\n\nexport const mergeField = payload => ({\n  type: MERGE,\n  payload\n});\n\nexport const destroyRow = payload => ({\n  type: DESTROY_ROW,\n  payload\n});\n","import {\n  IN_PROGRESS,\n  GAME_OVER,\n  GAME_PAUSED,\n  NOT_STARTED\n} from \"../../utils/consts\";\nimport { MERGE } from \"./field\";\nimport { calcNewScore, calcLevel, calcSpeed } from \"../../utils\";\n\nexport const START = \"START\";\nexport const DEFEAT = \"DEFEAT\";\nexport const ROWS_DESTROYED = \"ROWS_DESTROYED\";\nexport const PAUSE = \"PAUSE\";\nexport const RESUME = \"RESUME\";\nexport const RESET = \"RESET\";\nexport const TOGGLE_PAUSE = \"TOGGLE_PAUSE\";\n\nconst defaultState = {\n  status: NOT_STARTED,\n  lastAction: null,\n  level: 1,\n  score: 0,\n  lines: 0,\n  speed: 1000\n};\n\nexport default (state = defaultState, action) => {\n  const { type, lines } = action;\n  switch (type) {\n    case START:\n      return { ...defaultState, status: IN_PROGRESS, lastAction: START };\n    case MERGE:\n      return { ...state, score: state.score + 10, lastAction: MERGE };\n    case DEFEAT:\n      return { ...state, status: GAME_OVER, lastAction: DEFEAT };\n    case ROWS_DESTROYED:\n      const newLevel = calcLevel(state.lines + lines);\n      const newSpeed = calcSpeed(newLevel);\n      return {\n        ...state,\n        lines: state.lines + lines,\n        score: calcNewScore({ ...state, lines }),\n        level: newLevel,\n        speed: newSpeed,\n        lastAction: ROWS_DESTROYED\n      };\n    case PAUSE:\n      return { ...state, status: GAME_PAUSED, lastAction: PAUSE };\n    case RESUME:\n      return { ...state, status: IN_PROGRESS, lastAction: RESUME };\n    case RESET:\n      return { ...defaultState, status: IN_PROGRESS, lastAction: RESET };\n    default:\n      return state;\n  }\n};\n\nexport const start = () => ({\n  type: START\n});\n\nexport const gameOver = () => ({\n  type: DEFEAT\n});\n\nexport const rowsDestroyed = lines => ({\n  type: ROWS_DESTROYED,\n  lines\n});\n\nexport const togglePause = () => ({\n  type: TOGGLE_PAUSE\n});\n\nexport const reset = () => ({\n  type: RESET\n});\n\nexport const pause = () => ({\n  type: PAUSE\n});\n\nexport const resume = () => ({\n  type: RESUME\n});\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  levelSelector,\n  scoreSelector,\n  linesSelector,\n  gameStateSelector\n} from \"../../redux/selectors\";\nimport NextBlock from \"../next-block\";\nimport useInterval from \"../../hooks/use-interval\";\nimport {\n  START,\n  RESET,\n  PAUSE,\n  RESUME,\n  DEFEAT\n} from \"../../redux/ducks/game-state\";\nimport canvasStyles from \"../field/field.module.css\";\nimport styles from \"./info.module.css\";\nimport { timeFromMs } from \"../../utils\";\n\nfunction Info() {\n  const { level, score, lines, gameState } = useSelector(state => ({\n    level: levelSelector(state),\n    score: scoreSelector(state),\n    lines: linesSelector(state),\n    gameState: gameStateSelector(state)\n  }));\n  const { lastAction } = gameState;\n  const [time, setTime] = useState(0);\n  const incrementTime = useCallback(() => {\n    setTime(time => time + 1);\n  }, []);\n  const { start, pause, resume, reset } = useInterval(incrementTime, 1000);\n\n  useEffect(() => {\n    if (lastAction === START) {\n      start();\n    }\n    if (lastAction === RESET) {\n      reset();\n      setTime(0);\n    }\n    if (lastAction === PAUSE || lastAction === DEFEAT) {\n      pause();\n    }\n    if (lastAction === RESUME) {\n      resume();\n    }\n  }, [gameState]);\n\n  return (\n    <div className={styles[\"info-column\"]}>\n      <div\n        className={`${canvasStyles[\"canvas-container\"]} ${canvasStyles[\"canvas-container__dark\"]} ${styles.info}`}\n      >\n        <div>{`Level: ${level}`}</div>\n        <div>{`Score: ${score}`}</div>\n        <div>{`Lines: ${lines}`}</div>\n        <div>{`Time: ${timeFromMs(time)}`}</div>\n      </div>\n      <NextBlock />\n    </div>\n  );\n}\n\nexport default Info;\n","import React from \"react\";\nimport styles from \"./display.module.css\";\nimport Field from \"../field\";\nimport Info from \"../info\";\n\nexport default function Display() {\n  return (\n    <div className={styles[\"display-container\"]}>\n      <Field />\n      <Info />\n    </div>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport { isMobileDevice } from \"../utils\";\n\nconst mouseUp = isMobileDevice ? \"touchend\" : \"mouseup\";\nconst mouseDown = isMobileDevice ? \"touchstart\" : \"mousedown\";\n\nconst isKeyClicked = (targetKey, key) =>\n  targetKey && key && key.toLowerCase() === targetKey.toLowerCase();\n\nconst isButtonClicked = (targetButton, e, type) =>\n  targetButton && e.type === type && targetButton.current.contains(e.target);\n\nexport default function useKey({\n  targetKey,\n  callback,\n  continious = false,\n  targetButton = false,\n  frequency = 100,\n  delay = 200\n}) {\n  let interval, timeout;\n  const [pressed, setPressed] = useState(false);\n\n  const onDown = e => {\n    const { key } = e;\n    if (\n      isKeyClicked(targetKey, key) ||\n      isButtonClicked(targetButton, e, mouseDown)\n    ) {\n      e.preventDefault();\n      setPressed(true);\n    }\n  };\n  const onUp = e => {\n    const { key } = e;\n    if (\n      isKeyClicked(targetKey, key) ||\n      isButtonClicked(targetButton, e, mouseUp)\n    ) {\n      e.preventDefault();\n      setPressed(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onDown);\n    window.addEventListener(\"keyup\", onUp);\n    if (targetButton) {\n      window.addEventListener(mouseDown, onDown);\n      window.addEventListener(mouseUp, onUp);\n    }\n    return () => {\n      window.removeEventListener(\"keydown\", onDown);\n      window.removeEventListener(\"keydup\", onUp);\n      if (targetButton) {\n        window.addEventListener(mouseDown, onDown);\n        window.addEventListener(mouseUp, onUp);\n      }\n    };\n  }, [targetKey]);\n\n  useEffect(() => {\n    if (!callback) return;\n    if (pressed) callback();\n    if (continious) {\n      timeout = setTimeout(\n        () =>\n          (interval = setInterval(() => {\n            if (pressed && continious) {\n              callback();\n            }\n          }, frequency)),\n        delay\n      );\n    }\n    return () => {\n      clearTimeout(timeout);\n      clearInterval(interval);\n    };\n  }, [pressed, continious, delay]);\n\n  return pressed;\n}\n","import React from \"react\";\nimport styles from \"./button.module.css\";\n\nexport default function OptionButton({ style, text, pressed, btnRef }) {\n  return (\n    <div style={style} className={`${styles[\"button-container\"]}`}>\n      <button\n        className={`\n        ${styles[\"tetris-option-button\"]} ${\n          styles[\"tetris-option-button__dark\"]\n        }\n        ${pressed && styles[\"tetris-option-button__active\"]} ${pressed &&\n          styles[\"tetris-option-button__dark__active\"]}\n        `}\n        ref={btnRef}\n      ></button>\n      <div>{text}</div>\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { reset } from \"../../redux/ducks/game-state\";\nimport useKeyPress from \"../../hooks/use-key-press\";\nimport OptionButton from \"./option-button\";\n\nfunction StartButton({ style }) {\n  const dispatch = useDispatch();\n  const startGame = () => dispatch(reset());\n  const targetButton = useRef();\n  const pressed = useKeyPress({\n    targetKey: \"s\",\n    callback: startGame,\n    targetButton\n  });\n  return (\n    <OptionButton\n      style={style}\n      btnRef={targetButton}\n      pressed={pressed}\n      text=\"Start\"\n    />\n  );\n}\n\nexport default StartButton;\n","import React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { togglePause } from \"../../redux/ducks/game-state\";\nimport useKeyPress from \"../../hooks/use-key-press\";\nimport OptionButton from \"./option-button\";\n\nfunction PauseButton({ style }) {\n  const dispatch = useDispatch();\n  const togglePauseGame = () => dispatch(togglePause());\n  const targetButton = useRef();\n  const pressed = useKeyPress({\n    targetKey: \"p\",\n    callback: togglePauseGame,\n    targetButton\n  });\n  return (\n    <OptionButton\n      style={style}\n      btnRef={targetButton}\n      pressed={pressed}\n      text=\"Pause\"\n    />\n  );\n}\n\nexport default PauseButton;\n","import { getNewTetrimino } from \"../../utils\";\nimport { RESET } from \"./game-state\";\nimport { DEFAULT_SHAPE } from \"../../utils/consts\";\n\nexport const ROTATE = \"active-block/ROTATE\";\nexport const MOVE_RIGHT = \"active-block/MOVE_RIGHT\";\nexport const MOVE_LEFT = \"active-block/MOVE_LEFT\";\nexport const MOVE_DOWN = \"active-block/MOVE_DOWN\";\nexport const SET_NEW_TETRIMINO = \"active-block/SET_NEW_TETRIMINO\";\nexport const LOCK = \"active-block/LOCK\";\nexport const UNLOCK = \"active-block/UNLOCK\";\nexport const DROP = \"active-block/DROP\";\nexport const MOVE_LOCK = \"active-block/MOVE_LOCK\";\nexport const MOVE_UNLOCK = \"active-block/MOVE_UNLOCK\";\n\nexport default (state = DEFAULT_SHAPE, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case ROTATE:\n      return payload ? payload : state;\n    case MOVE_LEFT:\n      return { ...state, position: [state.position[0] - 1, state.position[1]] };\n    case MOVE_RIGHT:\n      return { ...state, position: [state.position[0] + 1, state.position[1]] };\n    case MOVE_DOWN:\n      return { ...state, position: [state.position[0], state.position[1] + 1] };\n    case SET_NEW_TETRIMINO:\n      return payload;\n    case RESET:\n      return getNewTetrimino();\n    case LOCK:\n      return { ...state, locked: true };\n    case UNLOCK:\n      return { ...state, locked: false };\n    case MOVE_LOCK:\n      return { ...state, movementLocked: true };\n    case MOVE_UNLOCK:\n      return { ...state, movementLocked: false };\n    default:\n      return state;\n  }\n};\n\nexport const moveRight = () => ({\n  type: MOVE_RIGHT\n});\n\nexport const moveLeft = () => ({\n  type: MOVE_LEFT\n});\n\nexport const moveDown = () => ({\n  type: MOVE_DOWN\n});\n\nexport const rotate = payload => ({\n  type: ROTATE,\n  payload\n});\n\nexport const setNewTetrimino = payload => ({\n  type: SET_NEW_TETRIMINO,\n  payload\n});\n\nexport const lock = () => ({\n  type: LOCK\n});\n\nexport const unlock = () => ({\n  type: UNLOCK\n});\n\nexport const drop = () => ({\n  type: DROP\n});\n\nexport const movementLock = () => ({\n  type: MOVE_LOCK\n});\n\nexport const movementUnlock = () => ({\n  type: MOVE_UNLOCK\n});\n","import React from \"react\";\nimport styles from \"./button.module.css\";\n\nfunction MainButton({ style, btnRef, pressed, text }) {\n  return (\n    <div style={style} className={`${styles[\"button-container\"]}`} ref={btnRef}>\n      <button\n        className={`\n        ${styles[\"tetris-button\"]} ${styles[\"tetris-button__dark\"]}\n        ${pressed && styles[\"tetris-button__active\"]} ${pressed &&\n          styles[\"tetris-button__dark__active\"]}\n        `}\n        tabIndex=\"-1\"\n      ></button>\n      <span>{text}</span>\n    </div>\n  );\n}\n\nexport default MainButton;\n","import React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useKeyPress from \"../../hooks/use-key-press\";\nimport { moveLeft } from \"../../redux/ducks/active-block\";\nimport MainButton from \"./main-button\";\n\nfunction LeftButton({ style }) {\n  const dispatch = useDispatch();\n  const callback = () => dispatch(moveLeft());\n  const targetButton = useRef();\n  const pressed = useKeyPress({\n    targetKey: \"ArrowLeft\",\n    callback,\n    continious: true,\n    targetButton\n  });\n  return (\n    <MainButton\n      style={style}\n      btnRef={targetButton}\n      pressed={pressed}\n      text=\"Left\"\n    />\n  );\n}\n\nexport default LeftButton;\n","import React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useKeyPress from \"../../hooks/use-key-press\";\nimport { moveRight } from \"../../redux/ducks/active-block\";\nimport MainButton from \"./main-button\";\n\nfunction RightButton({ style }) {\n  const dispatch = useDispatch();\n  const callback = () => dispatch(moveRight());\n  const targetButton = useRef();\n  const pressed = useKeyPress({\n    targetKey: \"ArrowRight\",\n    callback,\n    continious: true,\n    targetButton\n  });\n  return (\n    <MainButton\n      style={style}\n      pressed={pressed}\n      btnRef={targetButton}\n      text=\"Right\"\n    />\n  );\n}\n\nexport default RightButton;\n","import React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useKeyPress from \"../../hooks/use-key-press\";\nimport { rotate } from \"../../redux/ducks/active-block\";\nimport MainButton from \"./main-button\";\n\nfunction RotateButton({ style }) {\n  const dispatch = useDispatch();\n  const rotateBlock = () => dispatch(rotate());\n  const targetButton = useRef();\n  const pressed = useKeyPress({\n    targetKey: \"ArrowUp\",\n    callback: rotateBlock,\n    targetButton\n  });\n  return (\n    <MainButton\n      style={style}\n      btnRef={targetButton}\n      pressed={pressed}\n      text=\"Rotate\"\n    />\n  );\n}\n\nexport default RotateButton;\n","import React, { useRef, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useKeyPress from \"../../hooks/use-key-press\";\nimport {\n  moveDown,\n  movementLock,\n  movementUnlock\n} from \"../../redux/ducks/active-block\";\nimport MainButton from \"./main-button\";\n\nfunction DownButton({ style }) {\n  const dispatch = useDispatch();\n  const callback = () => dispatch(moveDown());\n  const targetButton = useRef();\n  const pressed = useKeyPress({\n    targetKey: \"ArrowDown\",\n    callback,\n    continious: true,\n    frequency: 75,\n    targetButton\n  });\n  useEffect(() => {\n    dispatch(pressed ? movementLock() : movementUnlock());\n  }, [dispatch, pressed]);\n  return (\n    <MainButton\n      style={style}\n      pressed={pressed}\n      btnRef={targetButton}\n      text=\"Down\"\n    />\n  );\n}\n\nexport default DownButton;\n","import React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useKeyPress from \"../../hooks/use-key-press\";\nimport { drop } from \"../../redux/ducks/active-block\";\nimport MainButton from \"./main-button\";\n\nfunction DropButton({ style }) {\n  const dispatch = useDispatch();\n  const targetButton = useRef();\n  const dropBlock = () => dispatch(drop());\n  const pressed = useKeyPress({\n    targetKey: \" \",\n    callback: dropBlock,\n    targetButton\n  });\n  return (\n    <MainButton\n      style={style}\n      btnRef={targetButton}\n      pressed={pressed}\n      text=\"Drop\"\n    />\n  );\n}\n\nexport default DropButton;\n","import React from \"react\";\nimport Start from \"./start\";\nimport Pause from \"./pause\";\nimport styles from \"./button.module.css\";\nimport Left from \"./left\";\nimport Right from \"./right\";\nimport Rotate from \"./rotate\";\nimport Down from \"./down\";\nimport Drop from \"./drop\";\n\nexport default function Buttons() {\n  return (\n    <div className={styles[\"buttons-container\"]}>\n      <Start style={{ gridArea: \"start\" }} />\n      <Pause style={{ gridArea: \"pause\" }} />\n      <Rotate style={{ gridArea: \"start / start / rotate / rotate\" }} />\n      <Left style={{ gridArea: \"left\" }} />\n      <Down style={{ gridArea: \"down\" }} />\n      <Right style={{ gridArea: \"right\" }} />\n      <Drop style={{ gridArea: \"drop\" }} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport styles from \"./game.module.css\";\nimport Display from \"../display\";\nimport Buttons from \"../buttons\";\nimport useTabChange from \"../../hooks/use-tab-change\";\nimport { useDispatch } from \"react-redux\";\nimport { pause } from \"../../redux/ducks/game-state\";\n\nexport default function Game() {\n  const dispatch = useDispatch();\n  const callback = () => dispatch(pause());\n  useTabChange(callback);\n  return (\n    <div\n      className={`${styles[\"tetris-container\"]} ${styles[\"tetris-container__dark\"]}`}\n    >\n      <Display />\n      <Buttons />\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\n\nexport default function useTabChange(callback) {\n  useEffect(() => {\n    document.addEventListener(\"visibilitychange\", callback);\n    return () => {\n      document.removeEventListener(\"visibilitychange\", callback);\n    };\n  }, [callback]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Game from \"./components/game\";\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport activeBlock from \"../ducks/active-block\";\nimport field from \"../ducks/field\";\nimport nextBlock from \"../ducks/next-block\";\nimport gameState from \"../ducks/game-state\";\nimport highScore from \"../ducks/high-score\";\n\nexport default combineReducers({\n  activeBlock,\n  field,\n  nextBlock,\n  gameState,\n  highScore\n});\n","import { SET_NEW_TETRIMINO } from \"./active-block\";\nimport { RESET } from \"./game-state\";\nimport { getNewTetrimino } from \"../../utils\";\nimport { DEFAULT_SHAPE } from \"../../utils/consts\";\n\nexport default (state = DEFAULT_SHAPE, action) => {\n  const { type } = action;\n  switch (type) {\n    case SET_NEW_TETRIMINO:\n      return getNewTetrimino();\n    case RESET:\n      return getNewTetrimino();\n    default:\n      return state;\n  }\n};\n","export const NEW_HIGH_SCORE = \"NEW_HIGH_SCORE\";\n\nexport default (state = [0, 0, 0, 0, 0], action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case NEW_HIGH_SCORE:\n      return state\n        .concat(payload)\n        .sort((a, b) => b - a)\n        .slice(0, 5);\n    default:\n      return state;\n  }\n};\n\nexport const setNewHighScore = payload => ({\n  type: NEW_HIGH_SCORE,\n  payload\n});\n","import { GAME_OVER, GAME_PAUSED, NOT_STARTED } from \"../../utils/consts\";\nimport { TOGGLE_PAUSE, RESET, START } from \"../ducks/game-state\";\n\nconst alwaysDispatch = [START, RESET];\n\nexport default store => next => action => {\n  const { status } = store.getState().gameState;\n  const { type } = action;\n  if (alwaysDispatch.includes(type)) return next(action);\n  if (\n    status === GAME_OVER ||\n    status === NOT_STARTED ||\n    (status === GAME_PAUSED && type !== TOGGLE_PAUSE)\n  ) {\n    return;\n  }\n  return next(action);\n};\n","import {\n  MOVE_LEFT,\n  MOVE_RIGHT,\n  MOVE_DOWN,\n  ROTATE,\n  unlock,\n  lock\n} from \"../ducks/active-block\";\nimport { canMoveDown } from \"../../utils\";\n\nconst actions = [MOVE_LEFT, MOVE_RIGHT, MOVE_DOWN, ROTATE];\n\nexport default store => next => action => {\n  const { type } = action;\n  if (actions.includes(type)) {\n    next(action);\n    const block = store.getState().activeBlock;\n    const locked = block.locked;\n    const field = store.getState().field;\n    const isMovingDown = canMoveDown(field, block);\n    if (locked && isMovingDown) {\n      next(unlock());\n    }\n    if (!locked && !isMovingDown) next(lock());\n  } else {\n    return next(action);\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"../reduser\";\nimport collisionCheck from \"../middlewares/collision-check\";\nimport destroyRow from \"../middlewares/destroy-row\";\nimport gameStateChecker from \"../middlewares/game-state-checker\";\nimport blockLocker from \"../middlewares/block-locker\";\nimport pauseToggle from \"../middlewares/pause-toggle\";\nimport moveDown from \"../middlewares/move-down\";\nimport { loadHighScore } from \"../../localstorage\";\n\nconst middlewares = [\n  gameStateChecker,\n  pauseToggle,\n  moveDown,\n  collisionCheck,\n  blockLocker,\n  destroyRow\n];\nconst isDev = process.env.NODE_ENV === \"development\";\nconst highScore = loadHighScore();\nconst enhancer = applyMiddleware(...middlewares);\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__\n  ? window.__REDUX_DEVTOOLS_EXTENSION__()\n  : f => f;\nconst store = createStore(\n  reducer,\n  { ...reducer, highScore },\n  isDev ? compose(enhancer, devTools) : enhancer\n);\n\nexport default store;\n\nwindow.store = store;\n","import { TOGGLE_PAUSE, resume, pause } from \"../ducks/game-state\";\nimport { GAME_PAUSED, IN_PROGRESS } from \"../../utils/consts\";\n\nexport default store => next => action => {\n  const { type } = action;\n  if (type === TOGGLE_PAUSE) {\n    const { status } = store.getState().gameState;\n    if (status === GAME_PAUSED) {\n      return next(resume());\n    } else {\n      if (status === IN_PROGRESS) return next(pause());\n    }\n  }\n  return next(action);\n};\n","import { moveDown, MOVE_LOCK, MOVE_UNLOCK } from \"../ducks/active-block\";\nimport {\n  RESET,\n  PAUSE,\n  RESUME,\n  DEFEAT,\n  ROWS_DESTROYED\n} from \"../ducks/game-state\";\nimport { Interval } from \"../../utils\";\nimport { speedSelector } from \"../selectors\";\n\nexport default store => next => action => {\n  const callback = () => next(moveDown());\n  const { type } = action;\n  switch (type) {\n    case RESET:\n      next(action);\n      Interval.set(callback, speedSelector(store.getState()));\n      break;\n    case PAUSE:\n      Interval.pause(callback);\n      return next(action);\n    case RESUME:\n      Interval.resume(callback);\n      return next(action);\n    case DEFEAT:\n      Interval.clear(callback);\n      return next(action);\n    case MOVE_LOCK:\n      Interval.clear(callback);\n      return next(action);\n    case MOVE_UNLOCK:\n      Interval.set(callback, speedSelector(store.getState()));\n      return next(action);\n    case ROWS_DESTROYED:\n      const speedBefore = speedSelector(store.getState());\n      next(action);\n      const speedAfter = speedSelector(store.getState());\n      if (speedBefore !== speedAfter) {\n        Interval.clear(callback);\n        Interval.set(callback, speedAfter);\n      }\n      break;\n    default:\n      return next(action);\n  }\n};\n","import {\n  canMoveLeft,\n  canMoveRight,\n  rotateTetrimino,\n  getGhostBlock\n} from \"../../utils\";\nimport {\n  MOVE_DOWN,\n  MOVE_LEFT,\n  MOVE_RIGHT,\n  ROTATE,\n  rotate,\n  DROP\n} from \"../ducks/active-block\";\nimport { mergeField } from \"../ducks/field\";\n\nexport default store => next => action => {\n  const { type } = action;\n  const getBlock = () => store.getState().activeBlock;\n  const getField = () => store.getState().field;\n  let block, locked;\n  switch (type) {\n    case MOVE_LEFT:\n      const isMovingLeft = canMoveLeft(getField(), getBlock());\n      if (isMovingLeft) {\n        next(action);\n      }\n      break;\n    case MOVE_RIGHT:\n      const isMovingRight = canMoveRight(getField(), getBlock());\n      if (isMovingRight) {\n        next(action);\n      }\n      break;\n    case MOVE_DOWN:\n      block = getBlock();\n      locked = block.locked;\n      if (locked) return;\n      return next(action);\n    case DROP:\n      block = getBlock();\n      const field = getField();\n      const ghostBlock = getGhostBlock(field, block);\n      return next(mergeField(ghostBlock));\n    case ROTATE:\n      next(rotate(rotateTetrimino(getField(), getBlock())));\n      break;\n    default:\n      return next(action);\n  }\n};\n","import { MERGE, destroyRow, mergeField } from \"../ducks/field\";\nimport { destroyFullRows, collide, canMoveDown, Timeout } from \"../../utils\";\nimport {\n  rowsDestroyed,\n  gameOver,\n  PAUSE,\n  RESUME,\n  TOGGLE_PAUSE\n} from \"../ducks/game-state\";\nimport {\n  SET_NEW_TETRIMINO,\n  setNewTetrimino,\n  unlock,\n  LOCK,\n  UNLOCK\n} from \"../ducks/active-block\";\nimport { LOCK_DELAY, GAME_PAUSED, IN_PROGRESS } from \"../../utils/consts\";\nimport { saveHighScore } from \"../../localstorage\";\nimport { scoreSelector, highScoreSelector } from \"../selectors\";\nimport { setNewHighScore } from \"../ducks/high-score\";\n\nexport default store => next => action => {\n  const { type } = action;\n  const nextBlock = store.getState().nextBlock;\n  const dispatchMerge = () => {\n    store.dispatch(mergeField(store.getState().activeBlock));\n  };\n  switch (type) {\n    case LOCK:\n      Timeout.set(dispatchMerge, LOCK_DELAY);\n      return next(action);\n    case UNLOCK:\n      Timeout.clear(dispatchMerge);\n      return next(action);\n    case TOGGLE_PAUSE:\n      const isPaused = store.getState().gameState.status === GAME_PAUSED;\n      if (isPaused) {\n        Timeout.resume(dispatchMerge);\n      } else {\n        const isRunning = store.getState().gameState.status === IN_PROGRESS;\n        if (isRunning) Timeout.pause(dispatchMerge);\n      }\n      return next(action);\n    case PAUSE:\n      Timeout.pause(dispatchMerge);\n      return next(action);\n    case RESUME:\n      Timeout.resume(dispatchMerge);\n      return next(action);\n    case MERGE:\n      const { payload } = action;\n      const field = store.getState().field;\n      const isMovingDown = canMoveDown(field, payload);\n      if (isMovingDown) {\n        return next(unlock());\n      }\n      next(action);\n      const mergedField = store.getState().field;\n      const { matrix, rows } = destroyFullRows(mergedField);\n      next(destroyRow(matrix));\n      if (rows > 0) {\n        store.dispatch(rowsDestroyed(rows));\n      }\n      return store.dispatch(setNewTetrimino(nextBlock));\n    case SET_NEW_TETRIMINO:\n      const state = store.getState();\n      if (collide(state.field, state.nextBlock)) {\n        const score = scoreSelector(state);\n        const highScore = highScoreSelector(state);\n        if (highScore.reduce((res, val) => (res ? res : val < score), false)) {\n          next(setNewHighScore(score));\n          saveHighScore(highScoreSelector(store.getState()));\n        }\n        next(unlock());\n        return store.dispatch(gameOver());\n      }\n      next(action);\n      break;\n    default:\n      return next(action);\n  }\n};\n","export const loadHighScore = () => {\n  try {\n    const serializedHighScore = localStorage.getItem(\"highScore\");\n    if (serializedHighScore === null) {\n      return [0, 0, 0, 0, 0];\n    }\n    return JSON.parse(serializedHighScore);\n  } catch (err) {\n    return [0, 0, 0, 0, 0];\n  }\n};\n\nexport const saveHighScore = score => {\n  const serializedHighScore = JSON.stringify(score);\n  localStorage.setItem(\"highScore\", serializedHighScore);\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { isMobileDevice } from \"./utils\";\n\nif (isMobileDevice) {\n  document.addEventListener(\"touchend\", e => {\n    e.preventDefault();\n  });\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}